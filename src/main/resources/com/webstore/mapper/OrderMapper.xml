<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.webstore.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.webstore.domain.Order" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_num" property="orderNum" jdbcType="VARCHAR" />
    <result column="item_id" property="itemId" jdbcType="BIGINT" />
    <result column="item_count" property="itemCount" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="total_price" property="totalPrice" jdbcType="DOUBLE" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="is_payed" property="isPayed" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="val1" property="val1" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_num, item_id, item_count, user_id, total_price, description, is_payed, 
    create_time, status, val1
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.webstore.domain.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.webstore.domain.OrderExample" >
    delete from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.webstore.domain.Order" >
    insert into order (id, order_num, item_id, 
      item_count, user_id, total_price, 
      description, is_payed, create_time, 
      status, val1)
    values (#{id,jdbcType=BIGINT}, #{orderNum,jdbcType=VARCHAR}, #{itemId,jdbcType=BIGINT}, 
      #{itemCount,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{totalPrice,jdbcType=DOUBLE}, 
      #{description,jdbcType=VARCHAR}, #{isPayed,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=BIT}, #{val1,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.webstore.domain.Order" >
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="itemCount != null" >
        item_count,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="isPayed != null" >
        is_payed,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="val1 != null" >
        val1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=BIGINT},
      </if>
      <if test="itemCount != null" >
        #{itemCount,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="isPayed != null" >
        #{isPayed,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="val1 != null" >
        #{val1,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.webstore.domain.OrderExample" resultType="java.lang.Integer" >
    select count(*) from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderNum != null" >
        order_num = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.itemId != null" >
        item_id = #{record.itemId,jdbcType=BIGINT},
      </if>
      <if test="record.itemCount != null" >
        item_count = #{record.itemCount,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.totalPrice != null" >
        total_price = #{record.totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.isPayed != null" >
        is_payed = #{record.isPayed,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.val1 != null" >
        val1 = #{record.val1,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order
    set id = #{record.id,jdbcType=BIGINT},
      order_num = #{record.orderNum,jdbcType=VARCHAR},
      item_id = #{record.itemId,jdbcType=BIGINT},
      item_count = #{record.itemCount,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      total_price = #{record.totalPrice,jdbcType=DOUBLE},
      description = #{record.description,jdbcType=VARCHAR},
      is_payed = #{record.isPayed,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=BIT},
      val1 = #{record.val1,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.webstore.domain.Order" >
    update order
    <set >
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null" >
        item_id = #{itemId,jdbcType=BIGINT},
      </if>
      <if test="itemCount != null" >
        item_count = #{itemCount,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="isPayed != null" >
        is_payed = #{isPayed,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="val1 != null" >
        val1 = #{val1,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.webstore.domain.Order" >
    update order
    set order_num = #{orderNum,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=BIGINT},
      item_count = #{itemCount,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      total_price = #{totalPrice,jdbcType=DOUBLE},
      description = #{description,jdbcType=VARCHAR},
      is_payed = #{isPayed,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT},
      val1 = #{val1,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>